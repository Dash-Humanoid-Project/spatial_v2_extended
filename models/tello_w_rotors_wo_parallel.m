function robot = tello_w_rotors_wo_parallel

% NOTE 1: Featherstone v2 style rigid body model for tello model including 
% torso, both legs and rotors. BUT this model does not contain parts that
% complete parallel actuation such as 4-bar linkages or parallelogram.
% NOTE 2: Inertial parameters are stored in 
% 'inertial_params_X_partname.txt'. These text files are manually generated 
% from solidworks. 
% NOTE 3: Following cases are added to jcalc cases
%     case '-Rx'
%         Xj = rotx(q);
%         S = [-1;0;0;0;0;0];
%     case '-Ry'				% revolute Y axis
%         Xj = roty(-q);
%         S = [0;-1;0;0;0;0];
%     case '-Rz'			% revolute Z axis
%         Xj = rotz(-q);
%         S = [0;0;-1;0;0;0];


% number of bodies
robot.NB = 1+5+5+5+5; % 21 = torso + left limb + left rotors + right limb + right rotors


% tree structure
robot.parent = [0, ...
                1, 2, 3, 4, 5, ...
                1, 2, 2, 4, 4, ...
                1, 12, 13, 14, 15, ...
                1, 12, 12, 14, 14];


% joint types
robot.jtype = { 'Rz', ...
                'Rz', 'Rx', 'Ry', 'Ry', 'Ry', ...
                '-Rz', 'Rz', '-Rz', '-Rz', 'Rz' ...
                'Rz', 'Rx', 'Ry', 'Ry', 'Ry', ...
                '-Rz', 'Rz', '-Rz', '-Rz', 'Rz'};


% joint orientations
R2 = [  -1, 0, 0; ...
        0, 0, 1; ...
        0, 1, 0]; 
R3 = [  1, 0, 0; ...
        0, 0, -1; ...
        0, 1, 0];
R4 = R3;
R5 = R2;


% joint tree transformations
robot.Xtree = { eye(6), ...
                plux(eye(3), [0, 126, -87]*1E-3), ...
                plux(eye(3), [0, 0, -142.5]*1E-3), ...
                plux(eye(3), [0,0,0]*1E-3), ...
                plux(eye(3), [0, 0, -226.8]*1E-3), ...
                plux(eye(3), [0, 0, -260]*1E-3), ...
                ...
                plux(eye(3), [0, 126, -26]*1E-3), ...
                plux(R2, [0, 40, 0]*1E-3), ...
                plux(R2, [0, -40, 0]*1E-3), ...
                plux(R2, [0, 26.55, 0]*1E-3), ...
                plux(R2, [0, -26.55, 0]*1E-3), ...
                ...
                plux(eye(3), [0, -126, -87]*1E-3), ...
                plux(eye(3), [0, 0, -142.5]*1E-3), ...
                plux(eye(3), [0,0,0]*1E-3), ...
                plux(eye(3), [0, 0, -226.8]*1E-3), ...
                plux(eye(3), [0, 0, -260]*1E-3) ...
                ...
                plux(eye(3), [0, -126, -26]*1E-3), ...
                plux(R2, [0, 40, 0]*1E-3), ...
                plux(R2, [0, -40, 0]*1E-3), ...
                plux(R2, [0, 26.55, 0]*1E-3), ...
                plux(R2, [0, -26.55, 0]*1E-3), ...
                };


% import tello inertial pararmeters from solidworks-generated data files
inertial = fcn_import_params_solidworks('.\models\tello_params\inertial_*.txt');


% convert to rigid-body-inertia (rbi) 
% IMPORTANT: rotors' inertia are not designated
for idx_body = 1:6
    robot.I{idx_body} = mcI( inertial.mass{idx_body}, ...
                                 inertial.CoM{idx_body}', ...
                                 inertial.Ic{idx_body});
    if idx_body > 1      % repeated (right-hand-side) structural limbs
        robot.I{idx_body+10} = mcI( inertial.mass{idx_body}, ...
                                     inertial.CoM{idx_body}', ...
                                     inertial.Ic{idx_body});
    end
end


% 
% % appearances for showmotion
% robot.appearance.base = ...
%   { 'box', [-0.2 -0.2 -0.2; 0.2 0.2 0.2]*10E-2 };
% 
% robot.appearance.body{1} = ...
%  ...%     { 'stldraw', '.\mesh\torso_mesh.STL'};
%   { 'box', [-0.03 -0.12 0; 0.1 0.12 0.5] };
% 
% robot.appearance.body{2} = ...
%     { 'box', [0.05, 0.02, 0.07; -0.05, -0.02, -0.05]};
% 
% robot.appearance.body{3} = ...
%     { 'box', [0.05, 0.05, 0.05; -0.05, -0.05, -0.05] };
% 
% robot.appearance.body{4} = ...
%     { 'box', [0.05, 0.05, 0; -0.05, -0.05, -0.2286] };
% 
% robot.appearance.body{5} = ...
%     { 'box', [0.03, 0.03, 0; -0.03, -0.03, -0.260] };
% 
% robot.appearance.body{6} = ...
%     { 'box', [0.1, 0.01, 0; -0.1, -0.01, -0.02] };
% 
% robot.appearance.body{12} = ...
%     { 'box', [0.05, 0.02, 0.07; -0.05, -0.02, -0.05]};
% 
% robot.appearance.body{13} = ...
%     { 'box', [0.05, 0.05, 0.05; -0.05, -0.05, -0.05] };
% 
% robot.appearance.body{14} = ...
%     { 'box', [0.05, 0.05, 0; -0.05, -0.05, -0.2286] };
% 
% robot.appearance.body{15} = ...
%     { 'box', [0.03, 0.03, 0; -0.03, -0.03, -0.260] };
% 
% robot.appearance.body{16} = ...
%     { 'box', [0.1, 0.01, 0; -0.1, -0.01, -0.02] };
% 
% for jj = [7:11, 17:21]
% robot.appearance.body{jj} = ...
%     { 'cyl', [0, 0, -0.01; 0, 0, 0.01], 0.07 ...
%       'box', [0, -0.01, -0.01; 0.1, 0.01 0.01]  };
% end

% robot = floatbase(robot);
% showmotion(robot)


end
